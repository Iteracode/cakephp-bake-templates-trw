{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
<h3><?= __('{{ pluralHumanName }}') ?></h3>
<div class="row my-3">
    <div class="col">   
        <?= $this->Html->link(__('Ajouter'), ['action' => 'add', {{ pk|raw }}], ['class' => 'btn btn-primary']) ?>
    </div>
</div>
<div class="table-responsive">
    <table class="table table-striped ">
        <thead>
            <tr>
{% for field in fields|filter(field => field != 'id') %}
                <th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>
{% endfor %}
                <th scope="col" class="actions"><?= __('Actions') ?></th>
            </tr>
        </thead>
        <tbody>
            <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
            <tr>
{% for field in fields|filter(field => field != 'id') %}
{% set isKey = false %}
{% if associations.BelongsTo %}
{% for alias, details in associations.BelongsTo if field == details.foreignKey %}
{% set isKey = true %}
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
                <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
                <td class="actions">
                    <?= $this->Html->link(__('Voir'), ['action' => 'view', {{ pk|raw }}], ['class' => 'btn btn-primary']) ?>
                    <?= $this->Html->link(__('Modifier'), ['action' => 'edit', {{ pk|raw }}], ['class' => 'btn btn-primary']) ?>
                    <?= $this->Form->postLink(__('Supprimer'), ['action' => 'delete', {{ pk|raw }}], ['class' => 'btn btn-primary', 'confirm' => __('Êtes-vous sur de vouloir supprimer # {0}?', {{ pk|raw }})]) ?>
                </td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
    <div class="paginator">
        <ul class="pagination">
            <?= $this->Paginator->prev(__('Précédent')) ?>
            <?= $this->Paginator->numbers() ?>
            <?= $this->Paginator->next(__('Suivant')) ?>
        </ul>
    </div>
</div>
