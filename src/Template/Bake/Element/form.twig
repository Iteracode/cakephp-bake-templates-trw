{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set fields = Bake.filterFields(fields, schema, modelObject) %}
<div class="row justify-content-center">
    <div class="col-6">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h1><?= __('{{ action|humanize }} {{ singularHumanName }}') ?></h1>
            </div>
            <div class="card-body">
            <?= $this->Form->create(${{ singularVar }}) ?>
                    {% for field in fields if field not in primaryKey %}
                        {%- if keyFields[field] %}
                            {%- set fieldData = Bake.columnData(field, schema) %}
                            {%- if fieldData.null %}
                                <?= $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true, 'class' => 'form-control','label' => __('{{ field }}')]);?>
                                {{- "\n" }}
                            {%- else %}
                                <?= $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }},  'class' => 'form-control','label' => __('{{ field }}')]);?>
                                {{- "\n" }}
                            {%- endif %}
                        {%- elseif field not in ['created', 'modified', 'updated'] %}
                            {%- set fieldData = Bake.columnData(field, schema) %}
                            {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                                <?= $this->Form->control('{{ field }}', ['empty' => true, 'class' => 'form-control','label' => __('{{ field }}')]);?>
                                {{- "\n" }}
                            {%- else %}
                                <?= $this->Form->control('{{ field }}', [ 'class' => 'form-control','label' => __('{{ field }}')]);?>
                        {{- "\n" }}
                            {%- endif %}
                        {%- endif %}
                    {%- endfor %}

                    {%- if associations.BelongsToMany %}
                        {%- for assocName, assocData in associations.BelongsToMany %}
                                <?= $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}, 'class' => 'form-control','label' => __('{{ field }}')]);?>
                        {{- "\n" }}
                        {%- endfor %}
                    {% endif %}

                <div class="row justify-content-end mt-3">
                    <div class="col-auto">
                        <?= $this->Form->button(__('Submit'), ['class' => 'btn btn-success']) ?>                    </div>
                    </div>
                <?= $this->Form->end() ?>
            </div>
        </div>
    </div>
</div>
